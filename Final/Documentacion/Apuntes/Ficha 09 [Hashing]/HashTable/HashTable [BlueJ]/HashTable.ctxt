#BlueJ class context
comment0.target=HashTable()
comment0.text=\nCrea\ una\ tabla\ hash\ con\ tama\u00F1o\ 11\ por\ defecto.\ El\ valor\ 11\ es\ el\ primer\ n\u00FAmero\ primo\ \nmayor\ a\ 10,\ y\ se\ eligi\u00F3\ por\ su\ cercan\u00EDa\ con\ el\ valor\ "t\u00EDpico"\ de\ 10...\n\n
comment1.params=n
comment1.target=HashTable(int)
comment1.text=\nCrea\ una\ tabla\ hash\ con\ tama\u00F1o\ n.\ Si\ n\ es\ cero\ o\ negativo,\ el\ tama\u00F1o\ se\ ajusta\ a\ 11.\ Este\nconstructor\ no\ controla\ si\ n\ es\ primo,\ ni\ busca\ el\ siguiente\ primo\ mayor\ a\ n...\n@param\ n\ el\ tama\u00F1o\ de\ la\ tabla\ a\ crear.\n\n
comment2.params=x
comment2.target=void\ put(Comparable)
comment2.text=\nInserta\ un\ objeto\ x\ en\ la\ tabla.\ La\ inserci\u00F3n\ s\u00F3lo\ se\ lleva\ a\ cabo\ si\ x\ es\ de\ la\ misma\nclase\ que\ los\ objetos\ que\ ya\ est\u00E1n\ en\ la\ tabla.\n@param\ x\ el\ objeto\ a\ insertar.\n\n
comment3.params=x
comment3.target=void\ remove(Comparable)
comment3.text=\nElimina\ el\ objeto\ x\ de\ la\ tabla.\ No\ hace\ nada\ si\ x\ no\ es\ de\ la\ misma\ clase\ que\ los\nobjetos\ que\ ya\ estaban\ en\ la\ tabla,\ o\ si\ x\ no\ estaba\ en\ la\ tabla.\n@param\ x\ el\ objeto\ a\ eliminar.\n\n
comment4.params=x
comment4.target=Comparable\ get(Comparable)
comment4.text=\nBusca\ el\ objeto\ x\ en\ la\ tabla,\ y\ retorna\ la\ direcci\u00F3n\ del\ objeto\ que\ est\u00E9\ en\ la\ tabla\ \ny\ coincida\ con\ x,\ o\ null\ si\ x\ no\ exist\u00EDa\ en\ la\ tabla\ o\ no\ era\ de\ la\ misma\ clase\ que\ el\ \ncontenido\ de\ la\ tabla.\n@param\ x\ el\ objeto\ a\ buscar.\n@return\ la\ direcci\u00F3n\ del\ objeto\ que\ coincide\ con\ x\ en\ la\ tabla,\ o\ null\ si\ no\ exist\u00EDa.\n\n
comment5.params=x
comment5.target=boolean\ contains(Comparable)
comment5.text=\nComprueba\ si\ x\ est\u00E1\ en\ la\ tabla\ y\ retorna\ true\ en\ ese\ caso,\ o\ retorna\ false\ si\ x\ no\ \nexiste\ en\ la\ tabla\ o\ no\ es\ de\ la\ misma\ clase\ que\ el\ contenido\ de\ la\ tabla.\n@param\ x\ el\ objeto\ a\ buscar.\n@return\ true\ si\ x\ est\u00E1\ en\ la\ tabla.\n\n
comment6.target=String\ toString()
comment6.text=\nDevuelve\ el\ contenido\ de\ la\ tabla\ en\ forma\ de\ String.\n@return\ un\ String\ con\ el\ contenido\ de\ la\ tabla.\n\n
comment7.target=void\ rehash()
comment7.text=\nIncrementa\ el\ tama\u00F1o\ de\ la\ tabla\ y\ reorganiza\ su\ contenido.\ Se\ invoca\ autom\u00E1ticamente\ncuando\ se\ detecta\ que\ el\ promedio\ de\ nodos\ por\ lista\ supera\ a\ cierto\ valor\ cr\u00EDtico\n(que\ en\ nuestra\ implementaci\u00F3n\ de\ es\ de\ 3\ nodos\ por\ lista,\ aunque\ ser\u00EDa\ aceptable\ \nhasta\ unos\ 10\ nodos\ por\ lista)\n\n
comment8.params=k
comment8.target=int\ h(int)
comment8.text=\nFunci\u00F3n\ hash.\ Toma\ el\ hashCode()\ de\ un\ objeto,\ y\ retorna\ un\ \u00EDndice\ para\ entrar\ en\ \nel\ arreglo\ items.\n@param\ k\ el\ valor\ hashCode\ del\ objeto\ a\ almacenar.\n@return\ el\ \u00EDndice\ para\ entrar\ en\ la\ tabla\ items.\n\n
comment9.target=int\ averageLength()
comment9.text=\nCalcula\ la\ longitud\ promedio\ de\ las\ listas\ de\ la\ tabla\n@return\ la\ longitud\ promedio\ de\ la\ listas\ contenidas\ en\ la\ tabla.\n\n
numComments=10
