#BlueJ class context
comment0.params=mens
comment0.target=Encrypter(String)
comment0.text=\nInicializa\ el\ encriptador\ con\ un\ mensaje\ abierto\ tomado\ como\ par\u00E1metro.\ Si\ el\ par\u00E1metro\ es\ null,\ el\ \nmensaje\ a\ encriptar\ se\ inicializa\ como\ una\ cadena\ vac\u00EDa\ (""),\ lo\ cual\ deber\u00EDa\ provocar\ que\ el\ m\u00E9todo\ \ncode()\ retorne\ null.\ El\ constructor\ tambi\u00E9n\ inicia\ como\ cadena\ vac\u00EDa\ el\ mensaje\ encriptado\ (que\ se\ \nobtiene\ con\ getEncrypted())\ y\ esto\ tambi\u00E9n\ deber\u00EDa\ provocar\ que\ el\ m\u00E9todo\ decode()\ retorne\ null.\n\n
comment1.target=String\ getOpenMessage()
comment1.text=\nRetorna\ el\ \u00FAltimo\ mensaje\ abierto\ que\ deber\u00EDa\ ser\ usado\ la\ pr\u00F3xima\ vez\ que\ se\ invoque\ a\ code().\n@return\ el\ mensaje\ abierto.\n\n
comment2.params=mens
comment2.target=void\ setOpenMessage(String)
comment2.text=\nCambia\ el\ mensaje\ a\ encriptar.\ Si\ el\ nuevo\ mensaje\ es\ null,\ el\ mensaje\ a\ encriptar\ se\ inicia\ como\ cadena\ \nvac\u00EDa\ (""),\ lo\ que\ deber\u00EDa\ provocar\ que\ una\ invocaci\u00F3n\ a\ code()\ retorne\ null.\ En\ todos\ los\ casos,\ tambi\u00E9n\ \nse\ inicia\ como\ cadena\ vac\u00EDa\ el\ mensaje\ encriptado,\ lo\ que\ deber\u00EDa\ provocar\ que\ una\ nueva\ invocaci\u00F3n\ a\ decode()\ \nretorne\ null.\n@param\ mens\ el\ nuevo\ mensaje\ a\ encriptar.\n\n
comment3.target=String\ getEncrypted()
comment3.text=\nRetorna\ el\ \u00FAltimo\ mensaje\ encriptado.\ Si\ el\ valor\ retornado\ es\ null,\ es\ que\ la\ \u00FAltima\ invocaci\u00F3n\ a\ code()\ \nno\ pudo\ completar\ el\ proceso\ (posiblemente\ por\ caracteres\ extra\u00F1os\ en\ el\ mensaje\ abierto).\ Si\ el\ valor\ retornado\nes\ la\ cadena\ vac\u00EDa\ (""),\ es\ que\ nunca\ se\ invoc\u00F3\ code()\ o\ bien\ es\ que\ el\ mensaje\ abierto\ fue\ cambiado\ (con\ \nsetOpenMessage())\ desde\ la\ \u00FAltima\ vez\ que\ se\ invoc\u00F3\ a\ code().\n@return\ el\ \u00FAltimo\ mensaje\ encriptado.\n\n
comment4.target=String\ toString()
comment4.text=\nRetorna\ una\ cadena\ con\ el\ \u00FAltimo\ mensaje\ abierto\ trabajado\ por\ el\ encriptador\ y\ la\ \u00FAltima\ encriptaci\u00F3n\nconocida\ para\ ese\ mensaje\ (que\ puede\ ser\ null\ o\ la\ cadena\ vac\u00EDa\ si\ el\ proceso\ de\ encriptaci\u00F3n\ fall\u00F3\ o\ \nnunca\ se\ activ\u00F3).\n@return\ una\ cadena\ con\ el\ \u00FAltimo\ mensaje\ abierto\ y\ la\ \u00FAltima\ encriptaci\u00F3n\ conocida\ para\ \u00E9l.\n\n
comment5.target=String\ code()
comment5.text=\nEncripta\ un\ mensaje\ formado\ por\ los\ s\u00EDmbolos\ del\ alfabeto\ base,\ siguiendo\ alguna\ t\u00E9cnica\nde\ encriptaci\u00F3n\ que\ ser\u00E1\ provista\ por\ las\ clases\ derivadas.\ El\ m\u00E9todo\ retorna\ una\ cadena\ con\ el\ mensaje\nencriptado\ (o\ null\ si\ el\ proceso\ no\ pudo\ realizarse\ por\ haber\ caracteres\ extra\u00F1os\ en\ el\ mensaje\ abierto),\npero\ de\ todos\ modos\ el\ mensaje\ encriptado\ queda\ almacenado\ en\ la\ clase\ y\ puede\ recuperarse\ directamente\ \nusando\ getEncrypted().\n@return\ una\ cadena\ con\ el\ mensaje\ encriptado,\ o\ null\ si\ el\ mensaje\ abierto\ no\ pudo\ encriptarse\ (debido\ \na\ que\ alg\u00FAn\ caracter\ de\ ese\ mensaje\ original\ no\ figuraba\ en\ el\ alfabeto\ base\ aceptado).\n\n
comment6.target=String\ decode()
comment6.text=\nDesencripta\ un\ mensaje,\ siguiendo\ alguna\ t\u00E9cnica\ de\ encriptaci\u00F3n\ que\ ser\u00E1\ provista\ por\ las\ \nclases\ derivadas.\ El\ mensaje\ encriptado\ se\ supone\ creado\ con\ la\ misma\ t\u00E9cnica\ que\ ser\u00E1\ usada\ \npara\ desencriptar,\ y\ el\ mensaje\ obtenido\ contendr\u00E1\ exclusivamente\ caracteres\ del\ alfabeto\ base\ aceptado.\nEl\ m\u00E9todo\ retorna\ una\ cadena\ con\ el\ mensaje\ abierto\ (o\ null\ si\ el\ proceso\ no\ pudo\ realizarse\ por\ haber\ \ncaracteres\ extra\u00F1os\ en\ el\ mensaje\ encriptado),\ pero\ de\ todos\ modos\ el\ mensaje\ abierto\ queda\ almacenado\ en\ \nla\ clase\ y\ puede\ recuperarse\ directamente\ usando\ getOpenMessage().\n@return\ una\ cadena\ con\ el\ mensaje\ desencriptado,\ o\ null\ el\ proceso\ no\ pudo\ hacerse\ (debido\ a\ que\ alg\u00FAn\ \ncaracter\ del\ mensaje\ encriptado\ no\ era\ v\u00E1lido).\n\n
comment7.params=cad
comment7.target=boolean\ isOk(String)
comment7.text=\nComprueba\ si\ la\ cadena\ tomada\ como\ par\u00E1metro\ est\u00E1\ formada\ exclusivamente\ por\ caracteres\ del\ alfabeto\ base\ \naceptado\ por\ el\ encriptador.\n@param\ cad\ la\ cadena\ a\ comprobar\n@return\ true\ si\ todos\ los\ caracteres\ son\ v\u00E1lidos,\ o\ false\ en\ caso\ contrario\ (o\ si\ cad\ es\ null).\ \ \n\n
numComments=8
