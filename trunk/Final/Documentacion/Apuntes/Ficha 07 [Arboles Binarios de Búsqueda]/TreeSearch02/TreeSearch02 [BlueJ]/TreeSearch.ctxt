#BlueJ class context
comment0.target=TreeSearch()
comment0.text=\nConstructor.\ Garantiza\ que\ el\ \u00E1rbol\ arranca\ vac\u00EDo\n\n
comment1.params=x
comment1.target=Comparable\ search(Comparable)
comment1.text=\nBusca\ un\ objeto\ en\ el\ \u00E1rbol\ y\ retorna\ la\ direcci\u00F3n\ del\ nodo\ que\ lo\ contiene,\no\ null\ si\ no\ lo\ encuentra.\ Se\ considera\ que\ el\ \u00E1rbol\ es\ de\ b\u00FAsqueda,\ y\ por\ lo\ntanto\ no\ es\ heterog\u00E9neo.\ Se\ supone\ que\ el\ m\u00E9todo\ de\ inserci\u00F3n\ usado\ para\ncrear\ el\ \u00E1rbol\ es\ el\ provisto\ por\ esta\ clase,\ el\ cual\ verifica\ que\ el\ \u00E1rbol\ se\nmantenga\ homog\u00E9neo.\n@param\ x\ el\ objeto\ a\ buscar\n@return\ la\ direcci\u00F3n\ del\ objeto\ encontrado\ que\ coincide\ con\ x,\ o\ null\ si\ x\ no\ se\ \nencuentra.\ Tambi\u00E9n\ sale\ con\ null\ si\ se\ detecta\ que\ el\ objeto\ x\ no\ es\ \ncompatible\ con\ el\ tipo\ del\ info\ en\ los\ nodos\ del\ \u00E1rbol.\n\n
comment10.params=p\ cad
comment10.target=void\ armarPostOrden(NodeTree,\ StringBuffer)
comment11.params=p\ x
comment11.target=NodeTree\ eliminar(NodeTree,\ Comparable)
comment11.text=Auxiliar\ del\ m\u00E9todo\ de\ borrado.\ Borra\ un\ nodo\ que\ contenga\ al\ objeto\ x\ si\ el\ mismo\ \ntiene\ un\ hijo\ o\ ninguno.\n@param\ p\ nodo\ que\ est\u00E1\ siendo\ procesado\n@param\ x\ Objeto\ a\ borrar\n@return\ direcci\u00F3n\ del\ nodo\ que\ qued\u00F3\ en\ lugar\ del\ que\ ven\u00EDa\ en\ "p"\ al\ comenzar\ el\ proceso\n\n
comment12.params=d\ p
comment12.target=NodeTree\ dosHijos(NodeTree,\ NodeTree)
comment12.text=Auxiliar\ del\ m\u00E9todo\ de\ borrado.\ Reemplaza\ al\ nodo\ que\ ven\u00EDa\ en\ "p"\ por\ su\ mayor\ descendiente\ izquierdo\ "d",\ \ny\ luego\ borra\ a\ "d"\ de\ su\ posici\u00F3n\ original\n@param\ d\ nodo\ que\ est\u00E1\ siendo\ procesado\n@param\ p\ nodo\ a\ reemplazar\ por\ d\n@return\ direcci\u00F3n\ del\ nodo\ que\ qued\u00F3\ en\ lugar\ del\ que\ ven\u00EDa\ en\ "d"\ al\ comenzar\ el\ proceso.\n\n
comment2.params=x
comment2.target=boolean\ add(Comparable)
comment2.text=\nInserta\ un\ objeto\ en\ el\ \u00E1rbol.\ Si\ el\ objeto\ a\ insertar\ ya\ exist\u00EDa,\ no\ lo\ inserta\ y\ sale\nretornando\ false.\ Si\ no\ exist\u00EDa,\ lo\ inserta\ y\ retorna\ true.\ El\ m\u00E9todo\ cuida\ que\ el\ \u00E1rbol\ \nse\ mantenga\ homog\u00E9neo,\ retornando\ false\ sin\ hacer\ nada\ si\ se\ intenta\ insertar\ un\ objeto\ \ncuya\ clase\ no\ coincida\ con\ la\ de\ los\ que\ ya\ est\u00E1n\ en\ el\ \u00E1rbol.\n@return\ true\ si\ el\ objeto\ pudo\ insertarse\ -\ false\ en\ caso\ contrario\n@param\ x\ el\ objeto\ a\ insertar\n\n
comment3.params=x
comment3.target=boolean\ remove(Comparable)
comment3.text=\nBorra\ el\ nodo\ del\ Arbol\ que\ contiene\ al\ objeto\ x.\ Si\ el\ objeto\ x\ no\ es\ compatible\ con\ la\nclase\ de\ los\ nodos\ del\ \u00E1rbol,\ el\ m\u00E9todo\ sale\ sin\ hacer\ nada\ y\ retorna\ false.\n@param\ x\ el\ objeto\ a\ borrar.\n@return\ true\ si\ la\ eliminaci\u00F3n\ pudo\ hacerse,\ o\ false\ en\ caso\ contrario.\n\n
comment4.target=String\ toString()
comment4.text=\nRedefinici\u00F3n\ de\ toString\n@return\ el\ contenido\ del\ arbol,\ en\ secuencia\ de\ entre\ orden,\ como\ un\ String\n\n
comment5.target=String\ toPreOrdenString()
comment5.text=\nGenera\ un\ String\ con\ el\ contenido\ del\ arbol\ en\ pre\ orden\ \n@return\ el\ contenido\ del\ arbol,\ en\ secuencia\ de\ pre\ orden,\ como\ un\ String\n\n
comment6.target=String\ toEntreOrdenString()
comment6.text=\nGenera\ un\ String\ con\ el\ contenido\ del\ arbol\ en\ entre\ orden.\ Genera\ el\ mismo\ String\ que\ el\ \nm\u00E9todo\ toString()\ redefinido\ en\ la\ clase\n@return\ el\ contenido\ del\ arbol,\ en\ secuencia\ de\ entre\ orden,\ como\ un\ String\n\n
comment7.target=String\ toPostOrdenString()
comment7.text=\nGenera\ un\ String\ con\ el\ contenido\ del\ arbol\ en\ post\ orden\ \n@return\ el\ contenido\ del\ arbol,\ en\ secuencia\ de\ post\ orden,\ como\ un\ String\n\n
comment8.params=p\ cad
comment8.target=void\ armarPreOrden(NodeTree,\ StringBuffer)
comment9.params=p\ cad
comment9.target=void\ armarEntreOrden(NodeTree,\ StringBuffer)
numComments=13
